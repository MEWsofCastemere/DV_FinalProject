{
    "contents" : "# server.R\nrequire(\"jsonlite\")\nrequire(\"RCurl\")\nrequire(ggplot2)\nrequire(dplyr)\nrequire(shiny)\nrequire(shinydashboard)\nrequire(leaflet)\nrequire(gridExtra)\n\nshinyServer(function(input, output) {\n  Low_ <- reactive({input$Low}) \n  Medi <- reactive({input$Med}) \n  Hi <- reactive({input$High}) \n  LevelsKPI <- function(Damage01){\n    if (Damage01 > Hi()) return (150000)\n    if (Damage01 > Medi()) return (100000)\n    if (Damage01 > Low_()) return (50000) else return (0)\n  }\n  \n  df1 <- eventReactive(input$clicks, {data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query=\"select * from ADAMDATA\"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_mew2795', PASS='orcl_mew2795', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), )) %>% group_by(., YEAR, STATE) %>% mutate(KPI = cumsum(DAMAGE_KPI)) %>% mutate(MAX = max(KPI)) %>% select(YEAR, STATE, MAX) %>% distinct() %>% filter(MAX > Low_()) %>% mutate(INTENSE = LevelsKPI(as.numeric(MAX))) })\n  \n  output$distPlot1 <- renderPlot({             \n    plot <- ggplot() + \n      coord_cartesian() + \n      scale_x_discrete() +\n      scale_y_discrete() +\n      scale_fill_gradient2(low=\"palegreen3\", mid = \"forestgreen\", high= \"darkgreen\", midpoint = 100000) +\n      labs(title=input$title) +\n      labs(x=paste(\"Year\"), y=paste(\"State\")) +\n      theme(plot.background = element_rect(fill = 'white', colour = 'white'))+\n      layer(data=df1(), \n            mapping=aes(x= as.character(YEAR), y=STATE, fill = INTENSE), \n            stat=\"identity\", \n            stat_params=list(), \n            geom=\"tile\",\n            geom_params=list(), \n            position=position_identity()\n      )\n    \n    plot\n  })\n  observeEvent(input$clicks, {\n    print(as.numeric(input$clicks))\n  })\n  \n  # Begin code for Second Tab:\n  dfs <- eventReactive(input$clicks2, {data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query=\"select * from ADAMDATA\"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_mew2795', PASS='orcl_mew2795', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), )) %>% select(YEAR, DEATHS_DIRECT, DEATHS_INDIRECT, DAMAGE_PROPERTY, DAMAGE_CROPS, INJURIES_DIRECT, INJURIES_INDIRECT, STATE) %>% mutate(TOTAL_INJURIES = INJURIES_DIRECT + INJURIES_INDIRECT)})\n  #dfs1 <- select(dfs, BEGIN_YEARMONTH, DEATHS_DIRECT, DEATHS_INDIRECT, DAMAGE_PROPERTY, BEGIN_DAY) %>% filter(DEATHS_DIRECT != 0)\n  #df2 <- eventReactive(input$clicks2, {dfs1})\n  \n  output$distPlot2 <- renderPlot(height=1000, width=1000, {\n    DDPY <- ggplot() + \n      coord_cartesian() + \n      scale_x_discrete() +\n      scale_y_continuous() +\n      facet_wrap(~YEAR, ncol = 1) +\n      labs(title='StormEvents Barchart\\ndeaths_direct, avg(deaths_direct), ') +\n      labs(x=paste(\"Year\"), y=paste(\"Deaths Direct\")) +\n      layer(data=dfs(), \n            mapping=aes(x=YEAR, y=(DEATHS_DIRECT)), \n            stat=\"identity\", \n            stat_params=list(), \n            geom=\"bar\",\n            geom_params=list(color=\"blue\"), \n            position=position_identity()\n      ) + coord_flip() +\n      layer(data=dfs(), \n            mapping=aes(yintercept = 33.9), \n            geom=\"hline\",\n            geom_params=list(colour=\"red\")\n      )\n    DDPY\n    IDPY <- ggplot() + \n      coord_cartesian() + \n      #scale_color_gradient2(mid = (\"Green\"), high=\"Red\") +\n      scale_x_discrete() +\n      scale_y_continuous() +\n      facet_wrap(~YEAR, ncol = 1) +\n      labs(title='StormEvents Barchart\\ndeaths_indirect, avg(deaths_indirect), ') +\n      labs(x=paste(\"Year\"), y=paste(\"Deaths Indirect\")) +\n      layer(data=dfs(), \n            mapping=aes(x=YEAR, y=(DEATHS_INDIRECT)), \n            stat=\"identity\", \n            stat_params=list(), \n            geom=\"bar\",\n            geom_params=list(color=\"blue\"), \n            position=position_identity()\n      ) + coord_flip() +\n      layer(data=dfs(), \n            mapping=aes(yintercept = 1.33), \n            geom=\"hline\",\n            geom_params=list(colour=\"red\")\n      )\n    IDPY\n    DCPY <- ggplot() + \n      coord_cartesian() + \n      #scale_color_gradient2(mid = (\"Green\"), high=\"Red\") +\n      scale_x_discrete() +\n      scale_y_continuous() +\n      facet_wrap(~YEAR, ncol = 1) +\n      labs(title='StormEvents Barchart\\nDAMAGE_CROPS, avg(DAMAGE_CROPS), ') +\n      labs(x=paste(\"Year\"), y=paste(\"Damage Crops\")) +\n      layer(data=dfs(), \n            mapping=aes(x=YEAR, y=(DAMAGE_CROPS)), \n            stat=\"identity\", \n            stat_params=list(), \n            geom=(\"bar\"),\n            geom_params=list(colour=\"blue\"), \n            position=position_identity()\n      ) + coord_flip() +\n      layer(data=dfs(), \n            mapping=aes(yintercept = 266), \n            geom=\"hline\",\n            geom_params=list(colour=\"red\")\n      )\n    DCPY\n    DPPY <- ggplot() + \n      coord_cartesian() + \n      #scale_color_gradient2(mid = (\"Green\"), high=\"Red\") +\n      scale_x_discrete() +\n      scale_y_continuous() +\n      facet_wrap(~YEAR, ncol = 1) +\n      labs(title='StormEvents Barchart\\nDAMAGE_PROPERTY, avg(DAMAGE_PROPERTY), ') +\n      labs(x=paste(\"Year\"), y=paste(\"DAMAGE PROPERTY\")) +\n      layer(data=dfs(), \n            mapping=aes(x=YEAR, y=(DAMAGE_PROPERTY)), \n            stat=\"identity\", \n            stat_params=list(), \n            geom=\"bar\",\n            geom_params=list(colour=\"blue\"), \n            position=position_identity()\n      ) + coord_flip() +\n      layer(data=dfs(), \n            mapping=aes(yintercept = 2000), \n            geom=\"hline\",\n            geom_params=list(colour=\"red\")\n      )\n    DPPY\n    plot1 <- grid.arrange(DDPY, IDPY, DCPY, DPPY)\n    plot1\n  })\n  \n  # Begin code for Third Tab:\n  \n  df4 <- eventReactive(input$clicks4, {data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query=\"select * from ADAMDATA where DAMAGE_CROPS is not null and DAMAGE_PROPERTY is not null\"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_mew2795', PASS='orcl_mew2795', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), )) %>% select(MAGNITUDE, DAMAGE_CROPS, DAMAGE_PROPERTY, END, BEGIN, YEAR, DEATHS_DIRECT, DEATHS_INDIRECT) %>% filter(DAMAGE_PROPERTY > 0) %>% mutate (TIME_DIFFERENCE = (abs(END - BEGIN))) %>% mutate (TOTAL_DEATHS = (DEATHS_DIRECT + DEATHS_INDIRECT)) %>% filter(TIME_DIFFERENCE > 0, TOTAL_DEATHS > 0)})\n  \n  \n  output$distPlot4 <- renderPlot({\n    plot4 <- ggplot() + \n      coord_cartesian() + \n      scale_color_gradient2(mid = (\"Yellow\"), high=\"Red\") +\n      scale_x_continuous() +\n      scale_y_continuous() +\n      labs(title='Property Damage versus Time of Event') +\n      labs(x=\"Total Time of Disaster\", y=paste(\"Property Damage\")) +\n      layer(data=df4(), \n            mapping=aes(as.numeric(TIME_DIFFERENCE), y=as.numeric(as.character(DAMAGE_PROPERTY)), color = (MAGNITUDE)), \n            stat=\"identity\", \n            stat_params=list(), \n            geom=\"point\",\n            geom_params=list(), \n            #position=position_identity()\n            position=position_jitter(width=0.3, height=0)\n      )\n    plot4\n  })\n})\n",
    "created" : 1449512987551.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2186347584",
    "id" : "6D4A1F08",
    "lastKnownWriteTime" : 1449512947,
    "path" : "~/DataVisualization/DV_FinalProject/04 Shiny/server.R",
    "project_path" : "04 Shiny/server.R",
    "properties" : {
        "tempName" : "Untitled2"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "type" : "r_source"
}